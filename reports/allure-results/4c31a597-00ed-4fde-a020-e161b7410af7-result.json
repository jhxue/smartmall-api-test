{"name": "test_pay_for_item_with_no_money", "status": "broken", "statusDetails": {"message": "cattrs.errors.ClassValidationError: While structuring StoreResponse (1 sub-exception)", "trace": "self = <instance_of validator for type <class 'str'>>\ninst = StoreResponse(name=None, uuid=None, items=None)\nattr = Attribute(name='name', default=None, validator=<instance_of validator for type <class 'str'>>, repr=True, eq=True, eq_...ta=mappingproxy({}), type=<class 'str'>, converter=None, kw_only=False, inherited=False, on_setattr=None, alias='name')\nvalue = None\n\n    def __call__(self, inst, attr, value):\n        \"\"\"\n        We use a callable class to be able to change the ``__repr__``.\n        \"\"\"\n        if not isinstance(value, self.type):\n            msg = f\"'{attr.name}' must be {self.type!r} (got {value!r} that is a {value.__class__!r}).\"\n>           raise TypeError(\n                msg,\n                attr,\n                self.type,\n                value,\n            )\nE           TypeError: (\"'name' must be <class 'str'> (got None that is a <class 'NoneType'>).\", Attribute(name='name', default=None, validator=<instance_of validator for type <class 'str'>>, repr=True, eq=True, eq_key=None, order=True, order_key=None, hash=None, init=True, metadata=mappingproxy({}), type=<class 'str'>, converter=None, kw_only=False, inherited=False, on_setattr=None, alias='name'), <class 'str'>, None)\n\nvenv\\Lib\\site-packages\\attr\\validators.py:100: TypeError\n\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"<cattrs generated structure fixtures.magazine.model.StoreResponse>\", line 24, in structure_StoreResponse\n    return __cl(\n            ^^^^^\n  File \"<attrs generated methods fixtures.magazine.model.StoreResponse>\", line 29, in __init__\n    __attr_validator_name(self, __attr_name, self.name)\n  File \"C:\\Users\\Lenovo\\projects\\api-test\\venv\\Lib\\site-packages\\attr\\validators.py\", line 100, in __call__\n    raise TypeError(\nTypeError: (\"'name' must be <class 'str'> (got None that is a <class 'NoneType'>).\", Attribute(name='name', default=None, validator=<instance_of validator for type <class 'str'>>, repr=True, eq=True, eq_key=None, order=True, order_key=None, hash=None, init=True, metadata=mappingproxy({}), type=<class 'str'>, converter=None, kw_only=False, inherited=False, on_setattr=None, alias='name'), <class 'str'>, None)\n\nDuring handling of the above exception, another exception occurred:\n\n  + Exception Group Traceback (most recent call last):\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\conftest.py\", line 80, in store\n  |     res = app.operations_with_store.add_new_store(\n  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\common\\deco.py\", line 20, in inner\n  |     res = function(*args, **kwargs)\n  |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\fixtures\\magazine\\api.py\", line 26, in add_new_store\n  |     return self.structure(response, type_response=type_response)\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\fixtures\\validator.py\", line 20, in structure\n  |     raise e\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\fixtures\\validator.py\", line 18, in structure\n  |     response.data = cattr.structure(response.json(), type_response)\n  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File \"C:\\Users\\Lenovo\\projects\\api-test\\venv\\Lib\\site-packages\\cattrs\\converters.py\", line 576, in structure\n  |     return self._structure_func.dispatch(cl)(obj, cl)\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File \"<cattrs generated structure fixtures.magazine.model.StoreResponse>\", line 27, in structure_StoreResponse\n  |     except Exception as exc: raise __c_cve('While structuring ' + 'StoreResponse', [exc], __cl)\n  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  | cattrs.errors.ClassValidationError: While structuring StoreResponse (1 sub-exception)\n  +-+---------------- 1 ----------------\n    | Traceback (most recent call last):\n    |   File \"<cattrs generated structure fixtures.magazine.model.StoreResponse>\", line 24, in structure_StoreResponse\n    |     return __cl(\n    |             ^^^^^\n    |   File \"<attrs generated methods fixtures.magazine.model.StoreResponse>\", line 29, in __init__\n    |     __attr_validator_name(self, __attr_name, self.name)\n    |   File \"C:\\Users\\Lenovo\\projects\\api-test\\venv\\Lib\\site-packages\\attr\\validators.py\", line 100, in __call__\n    |     raise TypeError(\n    | TypeError: (\"'name' must be <class 'str'> (got None that is a <class 'NoneType'>).\", Attribute(name='name', default=None, validator=<instance_of validator for type <class 'str'>>, repr=True, eq=True, eq_key=None, order=True, order_key=None, hash=None, init=True, metadata=mappingproxy({}), type=<class 'str'>, converter=None, kw_only=False, inherited=False, on_setattr=None, alias='name'), <class 'str'>, None)\n    +------------------------------------"}, "description": "\n        Steps.\n            1. Register new user\n            2. Access to store with valid data\n            3. Add user info\n            4. Add new store\n            5. Add new item info\n            6. Add user balance\n            7. Try to pay for item\n            8. Check that status code is 400\n            9. Check response\n        ", "attachments": [{"name": "log", "source": "8ca5ba6a-04fc-47dd-9481-16ba7b4fbdc2-attachment.txt", "type": "text/plain"}], "start": 1755009226732, "stop": 1755009226732, "uuid": "6e95568d-8528-47b8-b355-07ad761deca4", "historyId": "1109360ebb61377e0707b80f22ed2629", "testCaseId": "1109360ebb61377e0707b80f22ed2629", "fullName": "tests.pay_item.test_pay_item.TestPayItem#test_pay_for_item_with_no_money", "labels": [{"name": "tag", "value": "negative"}, {"name": "parentSuite", "value": "tests.pay_item"}, {"name": "suite", "value": "test_pay_item"}, {"name": "subSuite", "value": "TestPayItem"}, {"name": "host", "value": "ixx"}, {"name": "thread", "value": "28532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.pay_item.test_pay_item"}], "titlePath": ["tests", "pay_item", "test_pay_item.py", "TestPayItem"]}